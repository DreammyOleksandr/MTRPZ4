@using MTRPZ4.CoreDomain.Entities
@using Microsoft.AspNetCore.Identity

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

<ul class="header__nav_auth header__auth">
	@if (SignInManager.IsSignedIn(User))
	{
		<li>
			<a id="manage" asp-area="Identity" asp-page="/Account/Manage/Index" class="button is-min is-transparent" aria-label="Hello @UserManager.GetUserName(User)!">
				<span aria-hidden="true"></span>
				<span>
					Hello @UserManager.GetUserName(User)!
				</span>
			</a>
		</li>
		<li class="nav-item">
			<form id="logoutForm" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button id="logout" type="submit" class="button is-min" style="z-index: 1;">
					<span aria-hidden="true"></span>
					<span style="z-index: 2;">
						Logout
					</span>
				</button>
			</form>
		</li>

}
else
{
		<li>
			<a id="login" asp-area="Identity" asp-page="/Account/Login" class="button is-min is-transparent" aria-label="Sign in">
				<span aria-hidden="true"></span>
				<span>
					Sign in
				</span>
			</a>
		</li>
		<li>
			<a id="register" asp-area="Identity" asp-page="/Account/Register" class="button is-min" aria-label="Sign up">
				<span aria-hidden="true"></span>
				<span>
					Sign up
				</span>
			</a>
		</li>
}
</ul>
